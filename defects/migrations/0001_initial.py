# Generated by Django 4.2.7 on 2023-12-04 06:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(auto_created=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, unique=True)),
                ('defect_number', models.CharField(max_length=25)),
                ('priorty', models.IntegerField()),
                ('severiry', models.IntegerField()),
                ('mode_of_transport', models.CharField(max_length=6)),
                ('version', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=20)),
                ('comments', models.CharField(blank=True, max_length=2000)),
                ('created_by', models.ForeignKey(default=' ', on_delete=django.db.models.deletion.DO_NOTHING, related_name='defects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(auto_created=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('body', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='posted_comments', to=settings.AUTH_USER_MODEL)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defect_comments', to='defects.defect')),
                ('up_votes', models.ManyToManyField(related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
